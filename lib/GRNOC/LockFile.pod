=head1 NAME

GRNOC::LockFile

=head1 SYNOPSIS

  use GRNOC::LockFile;
  use Try::Tiny;

  my $locker = GRNOC::LockFile->new( file => '/tmp/my.lock' );

  try {

    $locker->lock();  
  }

  catch {

    warn $_;
  };

  $locker->unlock();

=head1 DESCRIPTION

This library is used to manage lock files, typically for long-lived processes that often run
out of cron to prevent them from stacking on top of one another.  It is a wrapper built on top
of B<LockFile::Simple> but sets sane defaults for it and makes it easier to use.

Locks will automatically get released if the process terminates before B<unlock()> is called.
Locks will never be considered "stale" and will always fail if they still exist when calling
B<lock()>.

=head1 CONSTRUCTOR

=over 4

=item new ( OPTIONS )

=over 4

=item file <STRING> [required]

The path/file to use when B<lock()> and B<unlock()> are called.

=back

=back

=head1 METHODS

=over 4

=item lock

Locks the file provided.  Throws an exception if unable to do so.  Returns the B<GRNOC::LockFile> object on success.

=item unlock

Unlocks the file provided.  Throws an exception if unable to do so.  Returns the B<GRNOC::LockFile> object on success.

=back

=head1 AUTHOR

GlobalNOC Software Engineering <globalnoc@iu.edu>

=head1 COPYRIGHT

Copyright(C) 2015 The Trustees of Indiana University
